{
  "root": true,
  "extends": ["@thesis-co"],
  "rules": {
    "import/no-extraneous-dependencies": "off",
    "import/prefer-default-export": "off",
    // Regarding the fact that we are using Chakra UI lib let's disable this rule.
    // This will allow us to easily pass props from the parent component.
    "react/jsx-props-no-spreading": "off",
    // TypeScript allows us to declare props that are non-optional internally
    // but are interpreted as optional externally if they have defaultProps
    // defined; the following two adjustments disable eslint-plugin-react
    // checks that predate this ability for TS and that no longer apply.
    "react/default-props-match-prop-types": [
      2,
      { "allowRequiredDefaults": true }
    ],
    "react/require-default-props": [0],
  },
  // FIXME: 
  // This is temporary solution after changes of the eslint-config version: @thesis-co/eslint-config: "github:thesis/eslint-config#7b9bc8c"
  // Overrides rules should be fixed file by file.
  "overrides": [
    {
      "files": [
        "src/components/Header/ConnectWallet.tsx",
        "src/components/Modals/Support/MissingAccount.tsx",
        "src/components/Modals/Staking/SignMessage.tsx",
        "src/hooks/useDepositBTCTransaction.ts"
      ],
      "rules": {
        "@typescript-eslint/no-misused-promises": "off"
      }
    }, 
    {
      "files": [
        "src/hooks/useSignMessage.ts"
      ],
      "rules": {
        "@typescript-eslint/no-floating-promises": "off"
      }
    },
    {
      "files": [
        "src/theme/*"
      ],
      "rules": {
        "@typescript-eslint/unbound-method": "off"
      }
    },
    {
      "files": [
        "src/theme/Alert.ts"
      ],
      "rules": {
        "@typescript-eslint/no-unsafe-member-access": "off"
      }
    }
  ],
  "settings": {
    "import/resolver": {
      "alias": {
        "map": [
          ["#", "./src"]
        ],
        "extensions": [".js", ".jsx",".ts", ".tsx"]
      }
    }
  }
}
