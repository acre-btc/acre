enum ChainType {
  Bitcoin
  Ethereum
}

enum LogType {
  Initialized
  Finalized
  Queued
  FinalizedFromQueue
  CancelledFromQueue
}

interface ActivityData {
  id: ID!
  staker: Staker
  logs: [LogData!]
}

type StakeRequestInitialized @entity {
  id: ID!
  depositKey: BigInt! # uint256
  caller: Bytes! # address
  staker: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Staker @entity {
  # Id is the ethereum address of the account.
  id: ID!
  activities: [ActivityData!] @derivedFrom(field: "staker")
}

type Stake implements ActivityData @entity {
  id: ID!
  staker: Staker
  logs: [LogData!] @derivedFrom(field: "activity")
  initialDepositAmountSatoshi: BigInt!
  amountToStakeStBtc: BigInt!
  shareStBtc: BigInt!
}

type Unstake implements ActivityData @entity {
  id: ID!
  staker: Staker
  logs: [LogData!] @derivedFrom(field: "activity")
  initialDepositAmountSatoshi: BigInt!
  amountToStakeStBtc: BigInt!
  shareStBtc: BigInt!
}

type LogData @entity {
  # Id is the transaction hash
  id: ID!
  timestamp: BigInt!
  activity: ActivityData
  chain: ChainType!
  type: LogType
  amount: BigInt!
}
